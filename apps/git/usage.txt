1. 为远程分支设置另名
	  Format:	
	   		git remote add <分支别名> <远程主机名>
	  Sample:
	   		git remote add upstream git@git.debug.google.com:aos/bass.git 

2. 合并分支xxx到当前分支
	   git merge 20141023     #合并20141023到当前分支

3. 从远程拉取并合并至本地分支
	   git pull <远程分支>  <本地分支>
	   git pull upstream dev
	   

4. 推送到远程分支
	 git push <远程主机> <本地分支>:<远程分支> --force 
	   说明:  force 表示强制推送

5. GIT 发起Merge request工作流程:
     以trunk 为开发分支，master 为主分支。要从trunk 发起MR 为例：
   
	 1> 切换到master分支,同步代码:  git pull
	 2> 切换到要push 的分支:       git checkout trunk
	 3> 在trunk分支上执行          git rebase master
	 4> 解决冲突: 				...
	 5> 添加文件:           		git add -u   
	    # -u表示把所有track文件的修改加入缓存，而不加入文件。
		# 注: 此处不可调用commit
	
	 6> 继续rebase:              git rebase --continue
	 7> 推送分支发MR:				git push ...
   
     注意事项：
	 1> 在rebase过程中及完成后，都不需要执行commit, 是git自动完成。
	 2> 如中间遇到某个补丁不需要patch, 可以用:
	    git rebase --skip
	 3> 如果想回到rebase之前状态:
	    git rebase --abort

6. 用cherry-pick 发起mr:
   以release 为发布分支，master 为主分支。要从master 挑选部分commit至release， 发起MR:
   1> 切换到master分支,同步代码:  git pull
   2> 切换到要push 的分支:       git checkout release
   3> 在release分支上执行cherry-pick: 
	  1> 如果是一个merger:        
	     git cherry-pick 680573cf7b54c1569d06a653990a98356de6bd36 -m 1
	       
	  2> 如果是一个提交:
	     git cherry-pick 680573cf7b54c1569d06a653990a98356de6bd36
	  
	  3> 推送release 至gitlab, 在远端发起MR
	    
   
6. 添加忽略文件
	 1> 创建全局忽略文件, 比如忽略.project文件：
	 	git config --global core.excludesfile ~/.gitignore
	 	vim ~/.gitignore， 输入下列内容, 保存退出:
	 	*.project
	 
	 2> 创建局部忽略文件, 在指定仓库目录下，如：/root/home/micheal/workspace：
	 	git config --local core.excludesfile ./gitignore

7. 在git中删除一个文件
	1> 新建文件，而未加至缓存区的
		直接删除： rm readme.txt 	
		或者：    git clean -fd //f:文件; d:目录
		查看要删除的： git clean -n
	
	2> 新建文件，加至缓存区未提交的:  git reset HEAD readme.txt
	3> 新建文件，已提交本地版本库的:  
		git rm readme.txt
		git commit -am "Remove readme.txt"

8. 还原更改
	1> 如果新建文件或文件夹，还未加到索引区，可以直接
		git clean -fd
	
	2> 如果在已有文件上的更新，还未添加至索引区:
		git checkout -- readme.txt
	
	3>
	